{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\Academics\\\\Web Application\\\\client\\\\webapplication\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from \"react\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthContextProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [error, setError] = useState(null);\n\n  // Login request\n  const loginUser = async userData => {\n    try {\n      const res = await fetch(`http://localhost:8000/api/login`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(userData)\n      });\n      const result = await res.json();\n      if (!result.error) {\n        localStorage.setItem(\"token\", result.token);\n        setUser(result.user);\n        toast.success(\"Login successful!\");\n      } else {\n        setError(result.error);\n        toast.error(result.error);\n      }\n    } catch (err) {\n      console.log(err);\n      toast.error(\"Login failed. Please try again.\");\n    }\n  };\n\n  // Register request\n  const registerUser = async userData => {\n    try {\n      const res = await fetch(\"http://localhost:8000/api/register\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(userData)\n      });\n      const result = await res.json();\n      if (!result.error) {\n        toast.success(\"Registration successful!\");\n        console.log(result);\n      } else {\n        setError(result.error);\n        toast.error(result.error);\n      }\n    } catch (err) {\n      console.log(err);\n      toast.error(\"Registration failed. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      loginUser,\n      registerUser,\n      user,\n      setUser\n    },\n    children: [children, /*#__PURE__*/_jsxDEV(ToastContainer, {\n      autoClose: 2000\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthContextProvider, \"v7rnY3wB8K8bJ5T16BSeNVjHHLs=\");\n_c = AuthContextProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["createContext","useState","toast","ToastContainer","jsxDEV","_jsxDEV","AuthContext","AuthContextProvider","children","_s","user","setUser","error","setError","loginUser","userData","res","fetch","method","headers","body","JSON","stringify","result","json","localStorage","setItem","token","success","err","console","log","registerUser","Provider","value","autoClose","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/Academics/Web Application/client/webapplication/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useState } from \"react\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthContextProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Login request\r\n  const loginUser = async (userData) => {\r\n    try {\r\n      const res = await fetch(`http://localhost:8000/api/login`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(userData),\r\n      });\r\n      const result = await res.json();\r\n      if (!result.error) {\r\n        localStorage.setItem(\"token\", result.token);\r\n        setUser(result.user);\r\n        toast.success(\"Login successful!\");\r\n      } else {\r\n        setError(result.error);\r\n        toast.error(result.error);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      toast.error(\"Login failed. Please try again.\");\r\n    }\r\n  };\r\n\r\n  // Register request\r\n  const registerUser = async (userData) => {\r\n    try {\r\n      const res = await fetch(\"http://localhost:8000/api/register\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(userData),\r\n      });\r\n      const result = await res.json();\r\n      if (!result.error) {\r\n        toast.success(\"Registration successful!\");\r\n        console.log(result);\r\n      } else {\r\n        setError(result.error);\r\n        toast.error(result.error);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      toast.error(\"Registration failed. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ loginUser, registerUser, user, setUser }}>\r\n      {children}\r\n      <ToastContainer autoClose={2000} />\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}