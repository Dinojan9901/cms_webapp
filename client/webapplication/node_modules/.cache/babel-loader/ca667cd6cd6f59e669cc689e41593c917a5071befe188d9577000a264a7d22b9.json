{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\Academics\\\\Web Application\\\\client\\\\webapplication\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect, useContext } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport ToastContext from \"./ToastContext\";\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthContextProvider = ({\n  children\n}) => {\n  _s();\n  const {\n    toast\n  } = useContext(ToastContext);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [user, setUser] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    checkUserLoggedIn();\n  }, []);\n\n  // check if the user is logged in.\n  const checkUserLoggedIn = async () => {\n    try {\n      const res = await fetch('http://localhost:8000/api/me', {\n        method: \"GET\",\n        headers: {\n          Authorization: 'Bearer ${localStorage.getItem(\"token\")}'\n        }\n      });\n      const result = await res.json();\n      if (!result.error) {\n        setUser(result);\n        navigate(\"/\", {\n          replace: true\n        });\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  // login request.\n  const loginUser = async userData => {\n    try {\n      const res = await fetch(`http://localhost:8000/api/login`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          ...userData\n        })\n      });\n      const result = await res.json();\n      if (!result.error) {\n        localStorage.setItem(\"token\", result.token);\n        setUser(result.user);\n        toast.success(`Logged in ${result.user.name}`);\n        navigate(\"/\", {\n          replace: true\n        });\n      } else {\n        toast.error(result.error);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  // register request.\n  const registerUser = async userData => {\n    try {\n      const res = await fetch('http://localhost:8000/api/register', {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          ...userData\n        })\n      });\n      const result = await res.json();\n      if (!result.error) {\n        toast.success(\"user registered successfully! login into your account!\");\n        navigate(\"/login\", {\n          replace: true\n        });\n      } else {\n        toast.error(result.error);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const logoutUser = () => {\n    localStorage.removeItem(\"token\"); // Remove token from localStorage\n    setUser(null); // Clear user data\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      loginUser,\n      registerUser,\n      logoutUser,\n      user,\n      setUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 13\n  }, this);\n};\n_s(AuthContextProvider, \"cnKkpgTwLo6ia6aVXOrjO18OcPA=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = AuthContextProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","useContext","useLocation","useNavigate","ToastContext","toast","ToastContainer","jsxDEV","_jsxDEV","AuthContext","AuthContextProvider","children","_s","navigate","location","user","setUser","error","setError","checkUserLoggedIn","res","fetch","method","headers","Authorization","result","json","replace","err","console","log","loginUser","userData","body","JSON","stringify","localStorage","setItem","token","success","name","registerUser","logoutUser","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/Academics/Web Application/client/webapplication/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useState, useEffect, useContext } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport ToastContext from \"./ToastContext\";\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\n\r\nconst AuthContext = createContext();\r\n\r\n\r\n\r\nexport const AuthContextProvider = ({children}) => {\r\n    const {toast} = useContext(ToastContext);\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    const [user, setUser] = useState(null);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n      checkUserLoggedIn();\r\n    }, []);\r\n\r\n    // check if the user is logged in.\r\n    const checkUserLoggedIn = async () => {\r\n      try {\r\n        const res = await fetch('http://localhost:8000/api/me', {\r\n          method: \"GET\",\r\n         headers:  {\r\n          Authorization: 'Bearer ${localStorage.getItem(\"token\")}',\r\n         },\r\n        });\r\n        const result = await res.json();\r\n        if (!result.error) {\r\n          setUser(result);\r\n          \r\n          navigate(\"/\", { replace: true });\r\n            \r\n        } \r\n      }catch (err) {\r\n    console.log(err);\r\n      }\r\n    };\r\n\r\n// login request.\r\nconst loginUser = async (userData) => {\r\n  try {\r\n    const res = await fetch(`http://localhost:8000/api/login`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ ...userData }),\r\n    });\r\n      const result = await res.json();\r\n      if (!result.error) {\r\n        \r\n        localStorage.setItem(\"token\", result.token);\r\n        setUser(result.user);\r\n        toast.success(`Logged in ${result.user.name}`);\r\n\r\n        navigate(\"/\", { replace: true });\r\n\r\n      } else {\r\n        toast.error(result.error);\r\n      }\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n    };\r\n\r\n// register request.\r\nconst registerUser = async (userData) => {\r\n  \r\n  try {\r\n    const res = await fetch( 'http://localhost:8000/api/register', {\r\n      method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ ...userData }),\r\n      });\r\n    const result = await res.json();\r\n    if (!result.error) {\r\n      toast.success(\"user registered successfully! login into your account!\")\r\n      navigate(\"/login\", { replace: true });\r\n    } else {\r\n      toast.error(result.error);\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nconst logoutUser = () => {\r\n  localStorage.removeItem(\"token\"); // Remove token from localStorage\r\n  setUser(null); // Clear user data\r\n};\r\n\r\n    return (<AuthContext.Provider value={{loginUser, registerUser, logoutUser, user, setUser }}>\r\n        {children}\r\n    </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport default AuthContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}